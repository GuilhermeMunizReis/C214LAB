name: Python CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'  # Defina a versão do Python que você deseja usar

    # Instalar dependências do requirements.txt
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install unittest-xml-reporting  # Instalar dependências para gerar o relátorio em XML

    - name: Run tests with unittest
      run: |
        mkdir -p test-reports
        # Gerar o relatório de testes em formato XML e salvar na pasta test-reports
        python -m unittest discover -s test -p "*_test.py" > test-reports/report.xml

    - name: List test-reports directory
      run: ls -l test-reports  # Verifica se o relatório foi criado corretamente

    - name: Upload test reports
      uses: actions/upload-artifact@v3
      with:
        name: test-reports
        path: test-reports/report.xml  # Upload do arquivo report.xml específico

  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    # Instalar dependências do requirements.txt
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Construir o executável usando PyInstaller
    - name: Build executable
      run: |
        pip install pyinstaller
        pyinstaller --onefile main.py

    # Fazer upload do executável como artefato
    - name: Upload executable
      uses: actions/upload-artifact@v4
      with:
        name: my_python_executable
        path: dist/main
